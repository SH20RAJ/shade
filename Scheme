model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  posts     Post[]
  profile   Profile?
  comments  Comment[]
  likes     Like[]
  friends   User[]   @relation("Friendship")
  addedBy   User[]   @relation("Friendship")
  messages  Message[]
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
  likes     Like[]
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String?
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  post    Post     @relation(fields: [postId], references: [id])
  postId  Int
  author  User     @relation(fields: [authorId], references: [id])
  authorId Int
}

model Like {
  id      Int      @id @default(autoincrement())
  post    Post     @relation(fields: [postId], references: [id])
  postId  Int
  author  User     @relation(fields: [authorId], references: [id])
  authorId Int
}

model Friendship {
  id       Int      @id @default(autoincrement())
  friendId Int
  userId   Int
  User     User     @relation(fields: [userId], references: [id])
  Friend   User     @relation(fields: [friendId], references: [id])
}

model Message {
  id       Int      @id @default(autoincrement())
  content  String
  sender   User     @relation(fields: [senderId], references: [id])
  senderId Int
  receiver User     @relation(fields: [receiverId], references: [id])
  receiverId Int
}
